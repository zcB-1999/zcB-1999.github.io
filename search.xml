<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2021/07/11/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Markdown学习笔记</title>
    <url>/2021/07/12/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="Markdown的简单介绍"><a href="#Markdown的简单介绍" class="headerlink" title="Markdown的简单介绍"></a>Markdown的简单介绍</h1><p>Markdown是一种轻量级标记语言，允许使用容易读写的纯文本格式编写文档。编写的文档可以导出HTML、Word、图像、PDF、等多种格式的文档，文档的后缀名为.md或.markdown。</p>
<h1 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h1><p>Markdown的标题有两种格式</p>
<h2 id="使用-标记标题"><a href="#使用-标记标题" class="headerlink" title="使用#标记标题"></a>使用#标记标题</h2><p>可以支持六级标题，一个 # 是一个一级标题，两个 # 是二级标题…，以此类推（注意*后面有一个空格）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 一级标题</span></span><br><span class="line"><span class="comment">## 二级标题</span></span><br><span class="line"><span class="comment">### 三级标题</span></span><br><span class="line"><span class="comment">#### 四级标题</span></span><br><span class="line"><span class="comment">##### 五级标题</span></span><br><span class="line"><span class="comment">###### 六级标题</span></span><br></pre></td></tr></table></figure>
<p><strong>效果：</strong><br><img src="/2021/07/12/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/示例1.PNG" alt="示例"></p>
<h2 id="使用-或-标记标题"><a href="#使用-或-标记标题" class="headerlink" title="使用=或-标记标题"></a>使用=或-标记标题</h2><p>可以支持两个标题，= 对应的是一级标题，- 对应的是二级标题，其中 = 和 - 符号的数量必须要在三个或三个以上。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">一级标题</span><br><span class="line">===</span><br><span class="line">二级标题</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p><strong>效果：</strong><br><img src="/2021/07/12/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/示例2.PNG" alt="示例"></p>
<h1 id="二、段落格式"><a href="#二、段落格式" class="headerlink" title="二、段落格式"></a>二、段落格式</h1><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>Markdown 段落没有特殊的格式，直接编写文字就行，段落的换行是使用两个以上空格加上回车。</p>
<h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p>Markdown主要支持以下几种字体：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">_斜体文本_</span><br><span class="line">**粗体文本**</span><br><span class="line">__粗体文本__</span><br><span class="line">***粗斜体文本***</span><br><span class="line">___粗斜体文本___</span><br></pre></td></tr></table></figure><br>效果如下：<br><em>斜体文本</em><br>_斜体文本_<br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>斜粗体文本</em></strong><br><strong>_斜粗体文本_</strong></p>
<h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><p>可以在一行中用三个以上的星号（*）、减号（-）、底线（_）来建立一个分隔线，行内不能有其他东西,但是可以在星号或是减号中间插入空格。如下：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">***          <span class="comment">#星号</span></span><br><span class="line">* * *        带空格的星号</span><br><span class="line">- - -        <span class="comment">#下划线</span></span><br><span class="line">----------   <span class="comment">#横线</span></span><br></pre></td></tr></table></figure></p>
<p><strong>效果：</strong></p>
<hr>
<hr>
<hr>
<hr>
<h2 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h2><p>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可（注意波浪线与文字之间不要有空格），实例如下：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">实列</span><br><span class="line">~~实例~~</span><br></pre></td></tr></table></figure><br><strong>效果：</strong><br>实列<br><del>实例</del></p>
<h2 id="下划线"><a href="#下划线" class="headerlink" title="下划线"></a>下划线</h2><p>下划线可以通过HTML的标签来实现：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;u&gt;带下划线d的文本&lt;/u&gt;</span><br></pre></td></tr></table></figure><br><strong>效果：</strong><br><u>带下划线的文本</u></p>
<h1 id="三、列表"><a href="#三、列表" class="headerlink" title="三、列表"></a>三、列表</h1><p>Markdown支持有序列表和无序列表，无序列表使用星号（<em>）、加号（+）或者减号（-）作为列表标记，有序列表使用数字加点号（.）的形式，注意标记号与文本之间有一个空格。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">有序列表</span><br><span class="line">* 第一项</span><br><span class="line">* 第二项</span><br><span class="line">* 第三项</span><br><span class="line">+ 第一项</span><br><span class="line">+ 第二项</span><br><span class="line">+ 第三项</span><br><span class="line">- 第一项</span><br><span class="line">- 第二项</span><br><span class="line">- 第三项</span><br><span class="line">无序列表</span><br><span class="line">1. 第一项</span><br><span class="line">2. 第二项</span><br><span class="line">3. 第三项</span><br></pre></td></tr></table></figure><br><em>*效果：</em></em><br>有序列表</p>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<p>无序列表</p>
<ol>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ol>
<p>列表之间也可以进行嵌套，方法是在前面加四个空格：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. 第一项</span><br><span class="line">    + 第一项嵌套的第一个元素</span><br><span class="line">    - 第一项嵌套的第二个元素</span><br><span class="line">    * 第一项嵌套的第三个元素</span><br><span class="line">2. 第二项</span><br><span class="line">    + 第二项嵌套的第一个元素</span><br><span class="line">......</span><br></pre></td></tr></table></figure></p>
<ol>
<li>第一项：<ul>
<li>第一项嵌套的第一个元素</li>
</ul>
<ul>
<li>第一项嵌套的第二个元素</li>
</ul>
<ul>
<li>第一项嵌套的第三个元素</li>
</ul>
</li>
<li>第二项：<ul>
<li>第二项嵌套的第一个元素<br>……</li>
</ul>
</li>
</ol>
<h1 id="四、区块"><a href="#四、区块" class="headerlink" title="四、区块"></a>四、区块</h1><p>Markdown 区块引用是在段落开头使用 &gt; 符号（注意后面有一个空格）.要想实现区域块嵌套的话可以一次加一个 &gt; 符合：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; 最外层</span><br><span class="line">&gt; &gt; 第一层嵌套</span><br><span class="line">&gt; &gt; &gt; 第二层嵌套</span><br><span class="line">&gt; &gt; &gt; 11111111</span><br><span class="line">&gt; &gt; &gt; 11111111</span><br><span class="line">&gt; &gt; &gt; 11111111</span><br></pre></td></tr></table></figure><br><strong>效果：</strong></p>
<blockquote>
<p>最外层</p>
<blockquote>
<p>第一层嵌套</p>
<blockquote>
<p>第二层嵌套<br>11111111<br>11111111<br>11111111</p>
</blockquote>
</blockquote>
</blockquote>
<h2 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h2><p>如果要在列表项目内放进区块，那么就需要在 &gt; 前添加四个空格的缩进。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">* 第一项</span><br><span class="line">    &gt; 第一项的第一层嵌套内容</span><br><span class="line">    &gt; 第一项的第一层嵌套内容</span><br><span class="line">+ 第二项</span><br><span class="line">    &gt; 第二项的第一层的嵌套内容</span><br><span class="line">    &gt; 第二项的第二层的嵌套内容</span><br></pre></td></tr></table></figure><br><strong>效果:</strong></p>
<ul>
<li>第一项<blockquote>
<p>第一项的第一层嵌套内容<br>第一项的第一层嵌套内容</p>
</blockquote>
</li>
</ul>
<ul>
<li>第二项<blockquote>
<p>第二项的第一层的嵌套内容<br>第二项的第二层的嵌套内容</p>
</blockquote>
</li>
</ul>
<h1 id="五、代码区"><a href="#五、代码区" class="headerlink" title="五、代码区"></a>五、代码区</h1><p>如果是段落上的一个函数或片段，则可以用反引号（<code>）包起来
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">这是一个`<span class="built_in">printf</span>()`函数</span><br></pre></td></tr></table></figure>
**显示效果：**
这是一个</code>printf()<code>函数
对于代码区块，可以使用4 个空格或者一个制表符（Tab 键），也可以使用</code> <code>`` </code>包裹一段代码：<br><img src="/2021/07/12/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/示例3.PNG" alt="示例"><br><strong>效果：</strong></p>
<pre><code>这是一个代码区
这是一个代码区
这是一个代码区
</code></pre><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这是一个代码区</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">这是一个代码区</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">这是一个代码区</span><br></pre></td></tr></table></figure>
<h1 id="六、链接"><a href="#六、链接" class="headerlink" title="六、链接"></a>六、链接</h1><p>Mardown的链接有两种方式<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[链接名称](链接地址)</span><br><span class="line">or</span><br><span class="line">&lt;链接地址&gt;</span><br></pre></td></tr></table></figure><br><strong>显示效果：</strong><br><a href="https://zcb-1999.github.io/">zcB的博客</a><br>or<br><a href="https://zcb-1999.github.io/">https://zcb-1999.github.io/</a><br>此外，也可以使用变量代替<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[链接名称](链接变量)</span><br><span class="line">or</span><br><span class="line">&lt;链接名称&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[链接变量]: 链接网址</span><br><span class="line">[链接名称]: 链接网址</span><br></pre></td></tr></table></figure><br><strong>显示效果：</strong><br><a href="https://zcb-1999.github.io/">zcB的博客</a><br>or<br>&lt;<a href="https://zcb-1999.github.io/">zcB的博客</a>&gt;</p>
<h1 id="七、表格"><a href="#七、表格" class="headerlink" title="七、表格"></a>七、表格</h1><p>Markdown 制作表格使用 | 来分隔不同的单元格，用 - 来分隔表头和其他行（ - 的数量随便）。（注意表格应与上方的文字之间空一行）<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">|  表头   | 表头  |  表头  |</span><br><span class="line">|  ----  | ----  |   -   |</span><br><span class="line">| 单元格  | 单元格 | 单元格   |</span><br><span class="line">| 单元格  | 单元格 | 单元格   |</span><br></pre></td></tr></table></figure></p>
<p><strong>显示效果：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th>表头</th>
<th>表头</th>
<th>表头</th>
</tr>
</thead>
<tbody>
<tr>
<td>单元格</td>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td>单元格</td>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody>
</table>
</div>
<p>对齐方式可以按如下设置：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-:   设置内容和标题栏居右对齐。</span><br><span class="line">:-   设置内容和标题栏居左对齐。</span><br><span class="line">:-:  设置内容和标题栏居中对齐。</span><br><span class="line">不设置的话默认的是左对齐</span><br><span class="line">实例：</span><br><span class="line">|  左对齐方式   |   居中对齐方式  |  右对齐方式 |不设置对齐参数|不设置对齐参数|</span><br><span class="line">|    :-----   |    :-----:    |     -:     |    -----  |     --     |</span><br><span class="line">|   单元格     |     单元格     |   单元格    |   单元格   |    单元格   |</span><br><span class="line">|   单元格     |     单元格     |   单元格    |   单元格   |    单元格   |</span><br></pre></td></tr></table></figure><br><strong>显示效果：</strong></p>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">左对齐方式</th>
<th style="text-align:center">居中对齐方式</th>
<th style="text-align:right">右对齐方式</th>
<th>不设置对齐参数</th>
<th>不设置对齐参数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">单元格</td>
<td style="text-align:center">单元格</td>
<td style="text-align:right">单元格</td>
<td>单元格</td>
<td>单元格</td>
</tr>
<tr>
<td style="text-align:left">单元格</td>
<td style="text-align:center">单元格</td>
<td style="text-align:right">单元格</td>
<td>单元格</td>
<td>单元格</td>
</tr>
</tbody>
</table>
</div>
<h1 id="八、插入图片"><a href="#八、插入图片" class="headerlink" title="八、插入图片"></a>八、插入图片</h1><p>Markdown的插入图片方法如下：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![图片标题](图片路径)</span><br><span class="line">此方法用于插入本地图片</span><br><span class="line">![图片标题](图片地址 &quot;可选标题&quot;)</span><br><span class="line">此方法用于插入网络图片，里面放上图片的网址，还可以用引号包住并加上选择性的 &#x27;title&#x27; 属性的文字</span><br><span class="line">实例：</span><br><span class="line">![本地图片](ceshi/本地图片.webp)</span><br><span class="line">![网络图片](http://static.runoob.com/images/runoob-logo.png)</span><br><span class="line">![网络图片](http://static.runoob.com/images/runoob-logo.png &quot;可选标题&quot;)</span><br></pre></td></tr></table></figure><br><strong>显示效果：</strong><br><img src="/2021/07/12/Markdown%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/本地图片.webp" alt="本地图片"><br><img src="http://static.runoob.com/images/runoob-logo.png" alt="网络图片"><br><img src="http://static.runoob.com/images/runoob-logo.png" alt="网络图片" title="可选标题"></p>
<h1 id="九、插入公式"><a href="#九、插入公式" class="headerlink" title="九、插入公式"></a>九、插入公式</h1><p>若需要在编辑器中插入数学公式时，可以使用两个美元符 $$ 包裹 TeX 或 LaTeX 格式的数学公式来实现。 LaTeX的数学公式有两种：行中公式和独立公式。行中公式放在文中与其它文字混编，独立公式单独成行。<br>行中公式可以用如下方法表示：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ 数学公式 $</span><br></pre></td></tr></table></figure><br>独立公式可以用如下方法表示:<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ 数学公式 $$</span><br></pre></td></tr></table></figure><br>自动编号的公式可以用如下方法表示：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\begin&#123;equation&#125;</span><br><span class="line">    数学公式</span><br><span class="line">    \label&#123;eq:当前公式名&#125;</span><br><span class="line">\end&#123;equation&#125;</span><br></pre></td></tr></table></figure><br>自动编号后的公式可在全文任意处使用 \eqref{eq:公式名} 语句引用。</p>
<p><strong>行内公式实例：</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ J_\alpha(x) = \sum_&#123;m=0&#125;^\infty \frac&#123;(-1)^m&#125;&#123;m! \Gamma (m + \alpha + 1)&#125; &#123;\left(&#123; \frac&#123;x&#125;&#123;2&#125; &#125;\right)&#125;^&#123;2m + \alpha&#125; \text &#123;，行内公式实例&#125; $</span><br></pre></td></tr></table></figure><br><strong>显示效果：</strong><br>$ J_\alpha(x) = \sum_{m=0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha} \text {，行内公式实例} $</p>
<p><strong>独立公式实例：</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ J_\alpha(x) = \sum_&#123;m=0&#125;^\infty \frac&#123;(-1)^m&#125;&#123;m! \Gamma (m + \alpha + 1)&#125; &#123;\left(&#123; \frac&#123;x&#125;&#123;2&#125; &#125;\right)&#125;^&#123;2m + \alpha&#125; \text &#123;，独立公式实例&#125; $$</span><br></pre></td></tr></table></figure><br><strong>显示效果：</strong></p>
<script type="math/tex; mode=display">J_\alpha(x) = \sum_{m=0}^\infty \frac{(-1)^m}{m! \Gamma (m + \alpha + 1)} {\left({ \frac{x}{2} }\right)}^{2m + \alpha} \text {，独立公式实例}</script><p><strong>自动编号公式实例：</strong><br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$$ 在公式 \eqref&#123;eq:sample&#125; 中，我们看到了这个被自动编号的公式。$$</span><br><span class="line">\begin&#123;equation&#125;</span><br><span class="line">      E=mc^2 \text&#123;，自动编号公式实例&#125;</span><br><span class="line">      \label&#123;eq:sample&#125;</span><br><span class="line">\end&#123;equation&#125;</span><br></pre></td></tr></table></figure><br><strong>显示效果：</strong></p>
<script type="math/tex; mode=display">在公式 \eqref{eq:sample} 中，我们看到了这个被自动编号的公式。</script><p>\begin{equation}<br>      E=mc^2 \text{，自动编号公式实例}<br>      \label{eq:sample}<br>\end{equation}</p>
<p>更多具体的用法参考<a href="https://www.zybuluo.com/codeep/note/163962">Cmd Markdown 公式指导手册</a></p>
<h2 id="渲染公式"><a href="#渲染公式" class="headerlink" title="渲染公式"></a>渲染公式</h2><p>注意，在插入公式后如果发布到网站则需要进行渲染，否则公式无法正常显示。Hexo 默认使用 hexo-renderer-marked 引擎渲染网页，该引擎会把一些特殊的 markdown 符号转换为相应的 html 标签，如果被强制转换为标签，那么 MathJax 引擎在渲染数学公式的时候就会出错。解决办法具体步骤如下：</p>
<h3 id="1-安装插件"><a href="#1-安装插件" class="headerlink" title="1.安装插件"></a>1.安装插件</h3><p>更换 Hexo 的 markdown 渲染引擎，hexo-renderer-kramed 引擎是在默认的渲染引擎 hexo-renderer-marked 的基础上修改了一些 bug ，两者比较接近，也比较轻量级。需要先卸载原来的渲染引擎，再安装新的，命令如下：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure></p>
<h3 id="2-修改inline-js文件内容"><a href="#2-修改inline-js文件内容" class="headerlink" title="2.修改inline.js文件内容"></a>2.修改inline.js文件内容</h3><p>然后，更换引擎后行间公式可以正确渲染了，但是这样还没有完全解决问题，行内公式的渲染还是有问题，因为 hexo-renderer-kramed 引擎也有语义冲突的问题。接下来到博客根目录下，找到node_modules\kramed\lib\rules\inline.js，把第11行的 escape 变量的值做相应的修改：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span><br><span class="line">escape: /^\\([`*\[\]()#$+\-.!_&gt;])/,</span><br></pre></td></tr></table></figure><br>这一步是在原基础上取消了对\,{,}的转义(escape)，同时把第20行的em变量也要做相应的修改,如下：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br><span class="line">em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br></pre></td></tr></table></figure></p>
<h3 id="3-在主题配置文件-config-yml中开启MathJax-开关"><a href="#3-在主题配置文件-config-yml中开启MathJax-开关" class="headerlink" title="3.在主题配置文件_config.yml中开启MathJax 开关"></a>3.在主题配置文件_config.yml中开启MathJax 开关</h3><p>如何使用了主题了，别忘了在主题（Theme）中开启 MathJax 开关，下面以 next 主题为例，介绍下如何打开 MathJax 开关。进入到主题目录，找到 _config.yml 配置问题，把 math 默认的 false 修改为true，具体如下：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Math Equations Render Support</span><br><span class="line">math:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Default(true) will load mathjax/katex script on demand</span><br><span class="line">  # That is it only render those page who has &#x27;mathjax: true&#x27; in Front Matter.</span><br><span class="line">  # If you set it to false, it will load mathjax/katex srcipt EVERY PAGE.</span><br><span class="line">  per_page: true</span><br><span class="line"></span><br><span class="line">  engine: mathjax</span><br><span class="line">  #engine: katex</span><br></pre></td></tr></table></figure></p>
<h3 id="4-在文章的Front-matter里打开mathjax开关"><a href="#4-在文章的Front-matter里打开mathjax开关" class="headerlink" title="4.在文章的Front-matter里打开mathjax开关"></a>4.在文章的Front-matter里打开mathjax开关</h3><p>最后，还需要在文章的Front-matter里打开mathjax开关，如下：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: index.html</span><br><span class="line">date: 2018-07-05 12:01:30</span><br><span class="line">tags:</span><br><span class="line">mathjax: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><br>之所以要在文章头里设置开关，是因为考虑只有在用到公式的页面才加载 Mathjax，这样不需要渲染数学公式的页面的访问速度就不会受到影响了。最后重新启动hexo（先clean再generate）,问题应该就能解决了。</p>
<h1 id="十、绘制流程图"><a href="#十、绘制流程图" class="headerlink" title="十、绘制流程图"></a>十、绘制流程图</h1><p>这里采用的是mermaid绘制流程图，具体步骤如下：</p>
<h2 id="1-安装插件-1"><a href="#1-安装插件-1" class="headerlink" title="1.安装插件"></a>1.安装插件</h2><p>安装mermaid的相关插件<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-filter-mermaid-diagrams</span><br></pre></td></tr></table></figure></p>
<h2 id="2-修改主题的配置文件"><a href="#2-修改主题的配置文件" class="headerlink" title="2.修改主题的配置文件"></a>2.修改主题的配置文件</h2><p>在主题配置文件_config.yml中找到mermaid选项，将enable设置为true。</p>
<h2 id="3-加入mermaid代码块"><a href="#3-加入mermaid代码块" class="headerlink" title="3.加入mermaid代码块"></a>3.加入mermaid代码块</h2><p>这里要用三个反引号将流程图代码块包起来，并且注明mermaid，否则渲染不了。<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">三个反引号mermaid</span><br><span class="line">graph TD</span><br><span class="line">B((开始)) --&gt;C&#123;判断&#125;</span><br><span class="line">C --  a=1 --&gt;D[执行语句1]</span><br><span class="line">C --  a=2  --&gt;E[执行语句2]</span><br><span class="line">C --  a=3 --&gt;F[执行语句3]</span><br><span class="line">C -- a=4  --&gt;G[执行语句4]</span><br><span class="line">D--&gt; AA((结束))</span><br><span class="line">E--&gt; AA</span><br><span class="line">F--&gt; AA</span><br><span class="line">G--&gt; AA</span><br><span class="line">三个反引号</span><br></pre></td></tr></table></figure></p>
<h2 id="4-引入相关的js文件"><a href="#4-引入相关的js文件" class="headerlink" title="4.引入相关的js文件"></a>4.引入相关的js文件</h2><p>找到主题里面的页脚文件，也即 themes/next/layout/_partials/footer.swig ，在文件最后加上以下内容：<br><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% if (theme.mermaid.enable)  %&#125;</span><br><span class="line">  &lt;script src=&#x27;https://unpkg.com/mermaid@&#123;&#123; theme.mermaid.version &#125;&#125;/dist/mermaid.min.js&#x27;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    if (window.mermaid) &#123;</span><br><span class="line">      mermaid.initialize(&#123;theme: &#x27;forest&#x27;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><br>最后重启hexo就能看到效果了<br><strong>显示效果：</strong></p>
<p><pre class="mermaid">graph TD
B((开始)) -->C{判断}
C --  a=1 -->D[执行语句1]
C --  a=2  -->E[执行语句2]
C --  a=3 -->F[执行语句3]
C -- a=4  -->G[执行语句4]
D--> AA((结束))
E--> AA
F--> AA
G--> AA</pre><br>其他语法具体参考<a href="https://blog.csdn.net/zywvvd/article/details/110150639">hexo 利用 Markdown 语法画 mermaid 流程图</a></p>
]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>笔记</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>利用Hexo-Github-Next主题搭建个人网站、博客</title>
    <url>/2021/07/12/%E5%88%A9%E7%94%A8Hexo-Github-Next%E4%B8%BB%E9%A2%98%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99%E3%80%81%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1>]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>备忘</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一个blog</title>
    <url>/2021/07/11/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<h2 id="博客模板"><a href="#博客模板" class="headerlink" title="博客模板"></a>博客模板</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我的第一个blog</span><br><span class="line">date: 2021-7-12 17:46:18  <span class="comment">#可以不填即使用默认时间</span></span><br><span class="line">categories:</span><br><span class="line">- Web</span><br><span class="line">tags:</span><br><span class="line">- 前端</span><br><span class="line">- 备忘</span><br><span class="line">---</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>备忘</tag>
      </tags>
  </entry>
</search>
